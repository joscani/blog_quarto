{
  "hash": "a3a40ecb97944aec52e992071ad28151",
  "result": {
    "markdown": "---\ntitle: '¿Dos ejes de ordenadas? (Parte 1/n) '\nauthor: jlcr\ndate: '2021-08-18'\nslug: eje-y-secundario-1-n\ncategories:\n  - gráficos\n  - 2021\nexecute: \n  message: false\n  warning: false\n  echo: true\nformat: \n  html: \n    fig-height: 5\n    fig-dpi: 300\n    fig-width: 8.88\n    fig-align: center\nknitr:\n  opts_chunk:\n    out.width: 80%\n    fig.showtext: TRUE\n    collapse: true\n    comment: \"#>\"\n\n---\n\n\n\n\nAnoche me iba a ir a la cama tras escuchar un podcast, pero al final estuve entretenido debatiendo con Raúl Vaquerizo, Alberto González Almuiña y Jesús Lagos , sobre los gráficos con dos ejes de ordenadas. Aquí os dejo el [tweet](https://twitter.com/joscani/status/1427722746927190027) que puso Raúl. \n\nPues yendo al [post](https://analisisydecision.es/grafico-con-eje-secundario-en-ggplot2/) que puso Raúl construía el siguiente gráfico. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(magrittr)\nlibrary(insuranceData)\nlibrary(ggplot2)\n\n\n# url='http://www.businessandeconomics.mq.edu.au/our_departments/Applied_Finance_and_Actuarial_Studies/acst_docs/glms_for_insurance_data/data/claimslong.csv'\n# df <- read.csv(url)\n\ndata(\"ClaimsLong\")\ndf <- ClaimsLong\n\nresumen <- df %>% group_by(period) %>%\n  summarise(pct_exposicion = n(),\n            frecuencia = sum(claim)/n())\n\n\ng2 <- ggplot(resumen,aes(x = period)) + \n  geom_col(aes(y = pct_exposicion), fill=\"yellow\",alpha=0.7) + \n  geom_line(aes(y=frecuencia * 500000 ), group = 1,color=\"red\") + \n  geom_text(aes(y = frecuencia * 500000, label = paste(round(frecuencia*100),'%')),\n            vjust = 1.4, color = \"red\", size = 2) +\n  scale_y_continuous(sec.axis = sec_axis(~.* 500000, name = \"Frecuencia [%]\")) \n\ng2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=80%}\n:::\n:::\n\n\nY bueno, no está mal, pero no me acaba de gustar, sobre todo porque al fin y al cabo todos sus períodos tienen el mismo valor\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresumen\n#> # A tibble: 3 × 3\n#>   period pct_exposicion frecuencia\n#>    <int>          <int>      <dbl>\n#> 1      1          40000      0.131\n#> 2      2          40000      0.141\n#> 3      3          40000      0.156\n```\n:::\n\nAhora que lo pienso, casi que con la tabla valdría. Pero que pasaría si tenemos diferentes valores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(155)\nresumen %<>% \n  mutate(pct_exposicion = pct_exposicion * 10*runif(3))\nresumen\n#> # A tibble: 3 × 3\n#>   period pct_exposicion frecuencia\n#>    <int>          <dbl>      <dbl>\n#> 1      1        315266.      0.131\n#> 2      2        173523.      0.141\n#> 3      3        304162.      0.156\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(resumen,aes(x = period)) + \n  geom_col(aes(y = pct_exposicion), fill=\"yellow\",alpha=0.7) + \n  geom_line(aes(y=frecuencia * 500000 , group=), group = 1,color=\"red\") + \n  geom_text(aes(y = frecuencia * 500000, label = paste(round(frecuencia*100),'%')),\n            vjust = 1.4, color = \"red\", size = 2) +\n  scale_y_continuous(sec.axis = sec_axis(~.* 500000, name = \"Frecuencia [%]\")) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=80%}\n:::\n:::\n\nMe gusta aún menos este gráfico, yo propongo el siguiente en su lugar. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresumen %>% \n  ggplot(aes(x = period, y = frecuencia)) +\n  geom_point(aes(size=pct_exposicion)) + \n  geom_line() +\n  scale_size_continuous(range=c(4, 10)) +\n  scale_y_continuous(labels = scales::percent, limits = c(0,0.2))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=80%}\n:::\n:::\n\nDónde representamos la variable frecuencia en el eje de ordenadas y con el tamaño de los puntos representamos la otra variable. \n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}