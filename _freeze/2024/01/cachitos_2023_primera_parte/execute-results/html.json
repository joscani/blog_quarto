{
  "hash": "3c74d6b7c32581b0094f1644d95cd42b",
  "result": {
    "markdown": "---\ntitle: Cachitos 2023. Primera parte\ndate: '2024-01-02'\ncategories: \n  - estadística\n  - polémica\n  - 2024\n  - textmining\n  - ocr\n  - linux\n  - cachitos\ndescription: ''\nexecute: \n  message: false\n  warning: false\n  echo: true\nformat: \n  html: \n    fig-height: 5\n    fig-dpi: 300\n    fig-width: 9\n    fig-align: center\nknitr:\n  opts_chunk:\n    out.width: 80%\n    fig.showtext: TRUE\n    collapse: true\n    comment: \"#>\"\nimage: \"00000035.jpg\"\n---\n\n\n\nComo todos los años toca hacer el análisis de de los subtítulos de _Nochevieja a Cachitos_\n\nEste año resulta que la gente de RTVE ha capado el poder bajarse los videos desde rtve usando `curl` o `wget` , pero gracias a [Javi Fdez](https://twitter.com/jfcrz) he podido bajarme el video tirando de la url del streaming . \n\n\n## Requisitos\n\n* Un plugin en el navegador que pueda identificar el `m3u` asociado al archivo `mp4` del video de Cachitos que está en rtve play. Yo he usado [live Stream Downloader](https://chromewebstore.google.com/detail/live-stream-downloader/looepbdllpjgdmkpdcdffhdbmpbcfekj) , pero seguro que hay alguno mejor\n* Usar un sistema operativo GNU/Linux, en mi caso Linux Mint 21.2 basada en Ubuntu Jammy\n* `ffmpeg`  `sudo apt install ffmpeg` . ffmpeg nos va a servir para poder bajar el video \n* `mplayer` `sudo apt install mplayer`. `mplayer` con `mplayer` vamos a extraer 1 de cada 200 fotogramas del video\n*  `imagemagick` con `sudo apt install imagemagick`. Con `imagemagick` vamos a cambiar el tamaño de los fotogramas, recortar el área dónde están los subtítulos, convertir a formato `tif` e invertir los colores para que el texto se vea mejor. \n* `parallel` `sudo apt install parallel` . Con `parallel` vamos a poder utilizar varios núcleos e hilos del ordenador en paralelo y poder hacer la modificación de los fotogramas y el reconocimiento óptico de caracteres más rápido. \n* `tesseract` `sudo apt install tesseract-ocr` y `sudo apt install tesseract-ocr-spa` . Con `tesseract` se va a hacer el reconocimiento óptico del texto y guardar en ficheros de texto. \n* Elimina ficheros de texto de menos de 10 bytes, puesto que ahí no hay texto . \n\n\n## Script de bash\n\nEl script es [`extract_subtitles.sh`](extract_subtitles.sh)\n, se ejecutaría con `extract_subtitles.sh 2023` . \n\nEste script básicamente hace:\n\n* Se baja el video del sitio de rtve play\n* Extrae 1 de cada 200 fotogramas con mplayer\n* Reduce el tamaño de las imágenes con mogrify de imagemagick\n* Convierte a tif y  recorta el área dónde está el texto con convert y crop de imagemagick\n* Obtiene el negativo de ese tif con convert y negate\n* Obtiene el texto usando tesseract y guarda un archivo de texto por cada subtítulo\n\n\n```\n#!/bin/bash\n\nroot_directory=/home/jose/proyecto_cachitos\nmkdir -p $root_directory\ncd $root_directory\n\necho \"First arg: $1\"\nmkdir -p video\n\ncd video\n\nANNO=$1\necho $ANNO\nsuffix_video=\"_cachitos.mp4\"\nsuffix_jpg_dir=\"_jpg\"\nsuffix_txt_dir=\"_txt\"\n\nvideo_file=$ANNO$suffix_video\necho $video_file\n\n\nif [ \"$ANNO\" == \"2023\" ] ;\nthen\n    ffmpeg -i \"https://rtvehlsvodlote7.rtve.es/mediavodv2/resources/TE_SHIECRO/mp4/3/1/1704096565613.mp4/video.m3u8?hls_no_audio_only=true&hls_client_manifest_version=3&idasset=7047821\" -c copy $video_file\nfi\n\nif [ \"$ANNO\" == \"2022\" ] ;\nthen\n    ffmpeg -i \"https://rtvehlsvodlote7.rtve.es/mediavodv2/resources/TE_SHIECRO/mp4/1/5/1672556504451.mp4/video.m3u8?hls_no_audio_only=true&hls_client_manifest_version=3&idasset=6767615\" -c copy $video_file\nfi \n \n\n# Pasar a jpg uno de cada 200 fotogramas\n\nmplayer -vf framestep=200 -framedrop -nosound $video_file -speed 100 -vo jpeg:outdir=$ANNO$suffix_jpg_dir \n \ncd $ANNO$suffix_jpg_dir \n \n# Convertir a formato más pequño\nfind . -name '*.jpg' |  parallel -j 8 mogrify -resize 642x480 {}\n\n# Seleccionar cacho dond están subtitulos\nfind . -name '*.jpg' |  parallel -j 8 convert {} -crop 460x50+90+285 +repage -compress none -depth 8 {}.subtitulo.tif\n\n# Poner en negativo para que el ocr funcione mejor\nfind . -name '*.tif' |  parallel -j 8 convert {} -negate -fx '.8*r+.8*g+0*b' -compress none -depth 8 {}\n\n# Pasar el ocr con idioma en español\nfind . -name '*.tif' |  parallel -j 8 tesseract -l spa {} {}\n\n# mover a directorio texto\nmkdir -p $root_directory/$ANNO$suffix_txt_dir\n\nmv *.txt $root_directory/$ANNO$suffix_txt_dir\n\ncd $root_directory/$ANNO$suffix_txt_dir\n\n# Borrar archivos de 10 bytes , subtítulos vacíos\nfind . -size -10c -exec rm -f {} \\;\n\ncd $root_directory\n\n```\n\n\n## Algún ejemplo\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nroot_directory = \"~/proyecto_cachitos/\"\nanno <- \"2023\"\nlibrary(magick)\n(directorio_imagenes <- str_glue(\"{root_directory}video/{anno}_jpg/\"))\n#> ~/proyecto_cachitos/video/2023_jpg/\n\nimage_read(str_glue(\"{directorio_imagenes}00001297.jpg\"))\n```\n\n::: {.cell-output-display}\n![](cachitos_2023_primera_parte_files/figure-html/unnamed-chunk-1-1.png){width=80%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(str_glue(\"{directorio_imagenes}00001297.jpg.subtitulo.tif\"))\n```\n\n::: {.cell-output-display}\n![](cachitos_2023_primera_parte_files/figure-html/unnamed-chunk-2-1.png){width=80%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n\n(directorio_texto <- str_glue(\"{root_directory}{anno}_txt/\"))\n#> ~/proyecto_cachitos/2023_txt/\n\nsystem(str_glue(\"cat {directorio_texto}00001297.jpg.subtitulo.tif.txt\"), intern = TRUE)\n#> [1] \"Con el tiempo descubrimos que todas las letras de este\"\n#> [2] \"exprofesor de Primaria tenian referencias sexuales.\"   \n#> [3] \"\\f\"\n```\n:::\n\n\nY poco más, mañana intentaré tener el[post similar al del año pasado](../../2023/01/03/cachitos-2022-segunda-parte/index.qmd) dónde veíamos distancias de texto entre rótulos y demás. \n",
    "supporting": [
      "cachitos_2023_primera_parte_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}