{
  "hash": "e6db87a15a772121b2b623f943a7be88",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tooling\"  \ndate: '2024-12-29'\ncategories: \n  - \"2024\"\n  - tidymodels\n  - mlr3\n  - MLJ\n  - scikit-learn\ndescription: ''\nexecute: \n  message: false\n  warning: false\n  echo: true\n  output: true\nformat: \n  html: \n    fig-height: 5\n    fig-dpi: 300\n    fig-width: 8\n    fig-align: center\n    code-fold: show\n    code-link: true\n    code-summary: \"Show the code\"\n    code-tools: true \nknitr:\n  opts_chunk:\n    out.width: 80%\n    fig.showtext: TRUE\n    comment: \"#>\"\nimage: 'orbital.webp'\n---\n\n\n\n::: callout-note\n## Listening\n\n<iframe style=\"border-radius:12px\" src=\"https://open.spotify.com/embed/track/5s6QzUcfrXKYHRkjPX7unE?utm_source=generator\" width=\"100%\" height=\"250\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\"></iframe>\n\n:::\n\n## Forma, contenido, tooling. \n\nMe comentaba el otro día mi amigo Mario, que por culpa del \"tooling\" en lo que antes tardaba\n2 horas ahora se tira 2 semanas. \n\n¿A qué me refiero con esto del \"tooling\"? Pues a lo que he comentado muchas veces, unas por aquí y otras hablando con amigos, a que se le de más importancia al cómo que al qué y al para qué.  Por supuesto que el cómo se hagan las cosas es importante, para mí, las cosas se han de hacer bien, de forma sencilla y con \"filosofía Unix\". \n\nLo de la filosofía UNIX es algo muy simple, haz software que haga una sola cosa pero que la haga bien. También se podría decir aquello del principio KISS (Keep It Simple Stupid). \n\nEn el mundo del análisis de datos hay algunas herramientas que están muy bien hechas y que cumplen ese criterio de Keep It Simple y el de modularidad e ir juntando unas piezas con otras. Ya sea a través de programación orientada a objetos bien hecha o de paradigmas funcionales componiendo operaciones. \n\nEn mi opinión, en vez de intentar crear un megasoftware, nos iría mejor usando lo que ya otros han desarrollado con buen criterio, y así centrarnos en lo verdaderamente importante. \nOs dejo por aquí algunos enlaces\n\n\n* [MLJ. Framework en Julia para Machine Learning.](https://juliaai.github.io/MLJ.jl/dev/) a mi me gusta bastante\n* [Tidymodels](https://www.tmwr.org/). Muy limpio y funcional, útil para centrarse en lo que importa\n* [Mlr3](https://mlr3book.mlr-org.com/). Desarrollado con paradigma OOP. Implementa flujos más complejos que otros y al usar como estructura de datos los `data.table` funciona muy bien y rápido\n* [scikit-lean](https://scikit-learn.org/stable/). Un estándard en muchos sitios, aunque a mi parecer le falta integrar mejor algunas transformaciones. \n\n\nEn fin, lo que quería decir no lo puedo decir, así es la vida. Pero por favor, centrémonos en qué quiero hacre y para qué, del cómo ya hay muchas herramientas maduras que nos facilitan la vida, no nos compliquemos inútilmente. \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}