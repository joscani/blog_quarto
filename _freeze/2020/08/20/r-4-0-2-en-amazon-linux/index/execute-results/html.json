{
  "hash": "dcf91adb2a6a0ddaad51761ae4138200",
  "result": {
    "markdown": "---\ntitle: R 4.0.2  en amazon linux\ndate: '2020-08-20'\nslug: r-4-0-2-en-amazon-linux\ncategories:\n  - R\n  - linux\n  - aws\n  - 2020\ndescription: ''\nexecute: \n  message: false\n  warning: false\n  echo: true\nformat: \n  html: \n    fig-height: 5\n    fig-dpi: 300\n    fig-width: 8.88\n    fig-align: center\n    code-fold: show\n    code-summary: \"Mostrar / ocultar código\"\nknitr:\n  opts_chunk:\n    out.width: 80%\n    fig.showtext: TRUE\n    collapse: true\n    comment: \"#>\" \n---\n\n\nEntrada corta sobre como instalar R 4.0.2 en amazon linux, ya que por defecto trae una versión de R de hace 3 años. \n\nLa idea es instalar R vía rpm, sacada de [aquí](https://docs.rstudio.com/resources/install-r/), pero el problema es que en amazon linux faltan algunas librerías que están en centos 7 y hay que buscar los rpm.\n\nLa solución que me ha funcionado, estando como root en amazon linux\n\n```bash\ncd /tmp\ncurl -O http://mirror.ancl.hawaii.edu/linux/centos/7/os/x86_64/Packages/pcre2-utf32-10.23-2.el7.x86_64.rpm\ncurl -O http://mirror.ancl.hawaii.edu/linux/centos/7/os/x86_64/Packages/pcre2-utf16-10.23-2.el7.x86_64.rpm\ncurl -O https://rpmfind.net/linux/centos/7.8.2003/os/x86_64/Packages/pcre2-10.23-2.el7.x86_64.rpm\ncurl -O http://mirror.ancl.hawaii.edu/linux/centos/7/os/x86_64/Packages/pcre2-devel-10.23-2.el7.x86_64.rpm\ncurl -O https://rpmfind.net/linux/centos/6.10/os/x86_64/Packages/tk-8.5.7-5.el6.x86_64.rpm\n\n\n## instalar\n\nyum install -y tcl\nyum install -y tk-8.5.7-5.el6.x86_64.rpm\nyum install -y pcre2-utf32-10.23-2.el7.x86_64.rpm \nyum install -y pcre2-utf16-10.23-2.el7.x86_64.rpm\nyum install -y pcre2-10.23-2.el7.x86_64.rpm\nyum install -y pcre2-devel-10.23-2.el7.x86_64.rpm\n\n## install R\n\nyum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \nyum-config-manager --enable \"rhel-*-optional-rpms\"\n\nexport R_VERSION=4.0.2\n\ncurl -O https://cdn.rstudio.com/r/centos-7/pkgs/R-${R_VERSION}-1-1.x86_64.rpm\nyum install -y R-${R_VERSION}-1-1.x86_64.rpm\n\n# y ya estarian en /opt/R/4.0.2/\n```\n\nY si lo queremos en el dockerfile\n\n```bash\nFROM amazonlinux:2018.03-with-sources\nMAINTAINER canadasreche@gmail.com \n\n# Update yum\nRUN yum -y update \n\n# set locales\nRUN echo \"LANG=en_US.utf8\" >> /etc/locale.conf\n#RUN localedef -c -f UTF-8 -i en_US en_US.UTF-8\nRUN export LC_ALL=en_US.UTF-8\nRUN yum -y install gcc64 wget gcc gcc-c++ make\n\n# Install system libraries\nRUN export MAKE='make -j 8'\nRUN yum install -y xorg-x11-xauth.x86_64 xorg-x11-server-utils.x86_64 xterm libXt libX11-devel \\\nlibXt-devel libcurl-devel git compat-gmp4 compat-libffi5 libxml2-devel libjpeg-devel openssl-devel \\\nboost boost-devel autoconf flex bison libssh2-devel java-1.8.0-openjdk java-1.8.0-openjdk-devel \\\nfontconfig-devel cairo-devel mesa-libGLU-devel libGL-devel libpng-devel\n\n# Problems with some compilation with R libraries\n#RUN yum remove gcc72-c++.x86_64 libgcc72.x86_64 -y \\\nRUN yum groupinstall 'Development Tools' -y\n\n# Install and update R\nRUN yum install -y R-core R-base R-core-devel R-devel\nRUN yum update -y R-core R-base R-core-devel R-devel\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nRUN yum-config-manager --enable epel\nRUN yum-config-manager --enable \"rhel-*-optional-rpms\"\nRUN yum -y install v8-devel\n# ENV JAVA_HOME /usr/java/latest\n\n# Fix problem with c compiler\nRUN mkdir ~/.R\nRUN echo \"CC=gcc64\" >> ~/.R/Makevars\n\n# Fix problem with some libraries\nRUN ln -s /usr/lib/gcc/x86_64-amazon-linux/4.8.5/libgfortran.so /usr/lib/libgfortran.so\nRUN ln -s /usr/lib/gcc/x86_64-amazon-linux/4.8.5/libquadmath.so /usr/lib/libquadmath.so\n\n# Install R 4.0.2\n\nRUN curl -O http://mirror.ancl.hawaii.edu/linux/centos/7/os/x86_64/Packages/pcre2-utf32-10.23-2.el7.x86_64.rpm \\\n  && curl -O http://mirror.ancl.hawaii.edu/linux/centos/7/os/x86_64/Packages/pcre2-utf16-10.23-2.el7.x86_64.rpm \\\n  && curl -O https://rpmfind.net/linux/centos/7.8.2003/os/x86_64/Packages/pcre2-10.23-2.el7.x86_64.rpm \\\n  && curl -O http://mirror.ancl.hawaii.edu/linux/centos/7/os/x86_64/Packages/pcre2-devel-10.23-2.el7.x86_64.rpm \\\n  && curl -O https://rpmfind.net/linux/centos/6.10/os/x86_64/Packages/tk-8.5.7-5.el6.x86_64.rpm\n\nRUN yum install -y tcl \\\n  &&  yum install -y tk-8.5.7-5.el6.x86_64.rpm \\\n  &&  yum install -y pcre2-utf32-10.23-2.el7.x86_64.rpm \\\n  &&  yum install -y pcre2-utf16-10.23-2.el7.x86_64.rpm \\\n  &&  yum install -y pcre2-10.23-2.el7.x86_64.rpm \\\n  &&  yum install -y pcre2-devel-10.23-2.el7.x86_64.rpm\n\n\n## install R\n\nRUN cd /tmp\nRUN curl -O https://cdn.rstudio.com/r/centos-7/pkgs/R-4.0.2-1-1.x86_64.rpm\nRUN yum install -y R-4.0.2-1-1.x86_64.rpm\n\nCMD [\"bash\"] \n\n```\n\nY listo ya tendríamos R 4.0.2 en `/opt/R/`\n\nPara vincularlo con Rstudio server que estaría instalado en esta máquina (que formaría parte de un EMR) solo sería modificar el archivo `/etc/rstudio/rserver.conf` y añadir la línea\n\n```bash\nrsession-which-r=/opt/R/4.0.2/bin/R\n```\nY así tendríamos las dos versiones de R, la que viene por defecto en amazon linux y la 4.0.2\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}