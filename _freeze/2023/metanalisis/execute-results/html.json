{
  "hash": "ec2e7f4dc092117c52bd9d4e555f3e9b",
  "result": {
    "markdown": "---\ntitle: Meta-análisis. Agregando encuestas\ndate: '2023-07-22'\ndate-modified: last-modified\ncategories:\n  - muestreo\n  - 2023\n  - encuestas electorales\n  - análisis bayesiano\n  \nimage: metanalisis.png\nexecute: \n  message: false\n  warning: false\n  echo: true\nformat: \n  html: \n    fig-height: 5\n    fig-dpi: 300\n    fig-width: 8.88\n    fig-align: center\nknitr:\n  opts_chunk:\n    out.width: 80%\n    fig.showtext: TRUE\n    collapse: true\n    comment: \"#>\"\n---\n\n\n## Introducción\n\nYa en\n[2022](https://muestrear-no-es-pecado.netlify.app/2022/01/01/cocinando/)\nos mostraba uno de los ingredientes principales de la cocina electoral,\nal menos de la tradicional, no de la postmoderna Alaminos-Tezanos.\n\nHoy os quiero contar como haría yo la agregación de encuestas, cuando no\nse tienen los datos brutos. En primer lugar aviso de lo que sigue a\ncontinuación sólo lo he hecho **por diversión** y faltaría mucho más\ntrabajo para considerarlo un intento serio.\n\nLa diversión viene por este\n[tweet](https://twitter.com/AnaBayes/status/1682035400507002881) de\n[Anabel Forte](https://twitter.com/AnaBayes) que puso como contestación\na un hilo dónde Kiko Llaneras explicaba su modelo de predicción\nagregando encuestas y haciendo simulaciones. Aquí el [hilo de\nkiko](https://twitter.com/kikollan/status/1681610401367326720) y en la\nimagen la respuesta de Ana.\n\n![Tweet de Ana](tweet_ana_bayes.png)\n\n\nTotal, que dado que conozco a Ana y a Virgilio y son bayesianos y yo sólo un aprendiz de la cosa, pues he intentado un metaanálisis bayesiano sencillo juntando varias encuestas. \n\n\n## Datos \n\nLo primero era intentar encontrar datos de las encuestas que se han hecho, importante que tengan tanto la estimación como el tamaño muestral. Si, ya sé que cada empresa tiene su cocina y sus cosas, que unas son telefónicas, que otras son tracking o paneles y tal, pero ya he dicho que lo estoy haciendo por diversión.. \n\nBueno, pues [aquí](https://www.epdata.es/datos/elecciones-generales-cortes-23j-resultados-analisis-encuestas-censo-comunidades-provincias-municipios-estadisticas-mapas-datos-graficos/690#encuestas) he encontrado la info que buscaba. El tema es que la tabla está en una tabla de datawrapper  [enlace_table](https://www.datawrapper.de/_/I2mqK/) y no he sido capaz de escrapear de forma programática, que se le va a hacer, no vale uno pa to. \n\nComo eran muchas encuestas pues he ido seleccionando algunas del mes de julio y al final me he quedado con unas 23. Para cada encuesta he puesto su tamaño muestral, la diferencia entre la fecha de las elecciones y la fecha de la realización de la encuesta, variable `time` , también he convertido a votos la estimación que dan para pp, psoe, sumar, vox y resto, simplemente multiplicando la estimación que dan por su tamaño muestral.  \n\n\nMejor vemos la tabla \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(DT)\ndf <-  read_csv(here::here(\"data/encuestas_agregadas.csv\")) |> \n    select(empresa, time, partido, everything())\n\ndatatable(df)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-1673b7db64d3085d3803\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1673b7db64d3085d3803\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\"],[\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"electo_mania\",\"electo_mania\",\"electo_mania\",\"electo_mania\",\"electo_mania\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"prisa\",\"prisa\",\"prisa\",\"prisa\",\"prisa\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"celeste_tel\",\"celeste_tel\",\"celeste_tel\",\"celeste_tel\",\"celeste_tel\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"gesop\",\"gesop\",\"gesop\",\"gesop\",\"gesop\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"prisa\",\"prisa\",\"prisa\",\"prisa\",\"prisa\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\"],[-21,-21,-21,-21,-21,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-13,-13,-13,-13,-13,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-10,-10,-10,-10,-10,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7],[\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\"],[0.326,0.27,0.129,0.144,0.131,0.368,0.282,0.128,0.115,0.107,0.347,0.285,0.128,0.132,0.1080000000000001,0.346,0.286,0.123,0.127,0.1180000000000001,0.34,0.291,0.123,0.134,0.112,0.367,0.279,0.12,0.12,0.114,0.36,0.278,0.122,0.124,0.116,0.312,0.295,0.133,0.147,0.113,0.344,0.286,0.127,0.13,0.113,0.311,0.288,0.15,0.145,0.1060000000000001,0.365,0.284,0.115,0.114,0.122,0.367,0.282,0.116,0.124,0.111,0.363,0.277,0.119,0.12,0.121,0.322,0.291,0.144,0.142,0.101,0.338,0.286,0.127,0.139,0.11,0.355,0.263,0.127,0.135,0.12,0.306,0.274,0.144,0.15,0.126,0.37,0.284,0.115,0.119,0.112,0.372,0.283,0.113,0.111,0.121,0.356,0.266,0.127,0.131,0.12,0.329,0.287,0.137,0.135,0.112,0.322,0.286,0.138,0.139,0.115,0.335,0.283,0.132,0.137,0.113],[1447,1447,1447,1447,1447,1503,1503,1503,1503,1503,2880,2880,2880,2880,2880,4482,4482,4482,4482,4482,2788,2788,2788,2788,2788,5000,5000,5000,5000,5000,1000,1000,1000,1000,1000,2000,2000,2000,2000,2000,4455,4455,4455,4455,4455,1300,1300,1300,1300,1300,1100,1100,1100,1100,1100,5502,5502,5502,5502,5502,1000,1000,1000,1000,1000,1300,1300,1300,1300,1300,800,800,800,800,800,1500,1500,1500,1500,1500,1200,1200,1200,1200,1200,7002,7002,7002,7002,7002,1000,1000,1000,1000,1000,1500,1500,1500,1500,1500,2000,2000,2000,2000,2000,1600,1600,1600,1600,1600,1500,1500,1500,1500,1500],[472,391,187,207,190,553,424,192,173,161,999,821,369,380,311,1551,1282,551,569,529,948,811,343,374,312,1835,1395,600,600,570,360,278,122,124,116,624,590,266,294,226,1533,1274,566,579,503,404,374,196,188,138,402,312,127,125,134,2019,1552,638,682,611,363,277,119,120,121,419,378,187,185,131,270,229,102,111,88,532,394,190,204,180,367,329,173,180,151,2591,1989,805,833,784,372,283,113,111,121,534,399,190,197,180,658,574,274,270,224,515,458,221,222,184,503,424,198,206,169]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>empresa<\\/th>\\n      <th>time<\\/th>\\n      <th>partido<\\/th>\\n      <th>estim<\\/th>\\n      <th>n<\\/th>\\n      <th>votos<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,4,5,6]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\nPintamos \n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ncolores <-  c(\n    \"pp\" = \"#005999\",\n    \"psoe\" = \"#FF0126\", \n    \"sumar\" = \"#A00B85\", \n    \"vox\" = \"#51962A\", \n    \"resto\" = \"grey\"\n    )\n\ndf |> \n    ggplot(aes(x = time, y = estim,color = partido )) +\n    geom_point() +\n    scale_color_manual(values = colores) +\n    geom_smooth(se = FALSE)\n```\n\n::: {.cell-output-display}\n![](metanalisis_files/figure-html/unnamed-chunk-2-1.png){width=80%}\n:::\n:::\n\n\n\nLa selección de encuestas la he hecho sin mucho orden, son todas del mes de julio, algunas empresas repiten como sigma2 , gad3, simple_logica o sociométrica, otras veces he puesto como nombre el medio (okdiario o prisa). \n\nBueno, pues vamos a ver como hago el metaanálisis. \n\n### Preparación datos\n\nVoy a poner los datos en un formato que me conviene más para lo que quiero hacer.\n\n- n es tamaño de muestra\n- time : es días hasta elecciones, -7 quiere decir qeu la encuesta se publicó (o se hizo, no lo sé) 7 días antes del 23 de julio\n- Columnas resultantes de multiplicar la estimación en la encuesta para cada partido por el tamaño muestral\n\n\nComo vemos voy a considerar 23 encuestas. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_wider <- df |> \n    select(-estim) |> \n    pivot_wider( id_cols = c(empresa, n, time),\n                 names_from = partido, \n                 values_from = votos) |> \n    arrange(empresa)\n\nDT::datatable(df_wider)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-eea163984f97d59fa6a9\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-eea163984f97d59fa6a9\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"],[\"celeste_tel\",\"electo_mania\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gesop\",\"nc_report\",\"nc_report\",\"nc_report\",\"ok_diario\",\"ok_diario\",\"prisa\",\"prisa\",\"sigma2\",\"sigma2\",\"sigma2\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\"],[1100,2788,1503,5000,5502,7002,1200,1000,1000,1000,1500,1500,2000,2000,2880,4482,4455,1300,1300,1600,1447,800,1500],[-11,-12,-20,-12,-11,-7,-8,-12,-11,-7,-10,-7,-12,-7,-20,-13,-12,-12,-11,-7,-21,-11,-7],[402,948,553,1835,2019,2591,367,360,363,372,532,534,624,658,999,1551,1533,404,419,515,472,270,503],[312,811,424,1395,1552,1989,329,278,277,283,394,399,590,574,821,1282,1274,374,378,458,391,229,424],[127,343,192,600,638,805,173,122,119,113,190,190,266,274,369,551,566,196,187,221,187,102,198],[125,374,173,600,682,833,180,124,120,111,204,197,294,270,380,569,579,188,185,222,207,111,206],[134,312,161,570,611,784,151,116,121,121,180,180,226,224,311,529,503,138,131,184,190,88,169]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>empresa<\\/th>\\n      <th>n<\\/th>\\n      <th>time<\\/th>\\n      <th>pp<\\/th>\\n      <th>psoe<\\/th>\\n      <th>sumar<\\/th>\\n      <th>vox<\\/th>\\n      <th>resto<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\nPues con esto ya puedo hacer mi intento de meta-análisis, que es probable que esté mal, que no soy un experto en estas cosas. \n\n\n## Meta-análisis\n\nPues lo voy a hacer de forma bayesiana. Los datos los tenemos a nivel de encuesta, por lo que puedo considerar que los votos estimados a cada partido en cada encuesta siguen una distribución multinomial , dónde `n` (tamaño muestral) es el número de intentos y tengo el vector de votos a cada partido que se obtendría. La suma de pp+psoe+sumar+vox+resto es igual a `n` para cada fila de los datos. \n\nTambién puedo considerar que las estimaciones de varias encuestas realizadas por la misma empresa no son independientes, no es descabellado ¿verdad?.  Y también podría considerar que las estimaciones varían conforme se acerca la fecha de las elecciones y que esta variación podría ser diferente para cada empresa encuestadora. Pues con estos ingredientes ya puedo hacer el \"meta-análisis\" \n\n\nUtilizo la librería `brms`  que me va a permitir hacerlo con una interfaz sencilla. Y en algún momento del futuro miraré como hacerlo con `numpyro` que me está picando con eso [Carlos](https://www.datanalytics.com/2023/07/04/3pl-numpyro/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nlibrary(cmdstanr)\nlibrary(brms)\nlibrary(tidybayes)\n\noptions(brms.backend=\"cmdstanr\")\n\n```\n:::\n\n\nCreamos una columna que una las columnas de los votos a partidos para que sea nuestro vector de respuesta _multinomial_\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndf_wider$cell_counts <- with(df_wider, cbind(pp, psoe,sumar, vox, resto))\n\nDT::datatable(head(df_wider))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-1cec83e64295cde1b9d2\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1cec83e64295cde1b9d2\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[\"celeste_tel\",\"electo_mania\",\"gad3\",\"gad3\",\"gad3\",\"gad3\"],[1100,2788,1503,5000,5502,7002],[-11,-12,-20,-12,-11,-7],[402,948,553,1835,2019,2591],[312,811,424,1395,1552,1989],[127,343,192,600,638,805],[125,374,173,600,682,833],[134,312,161,570,611,784],[[402,312,127,125,134],[948,811,343,374,312],[553,424,192,173,161],[1835,1395,600,600,570],[2019,1552,638,682,611],[2591,1989,805,833,784]]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>empresa<\\/th>\\n      <th>n<\\/th>\\n      <th>time<\\/th>\\n      <th>pp<\\/th>\\n      <th>psoe<\\/th>\\n      <th>sumar<\\/th>\\n      <th>vox<\\/th>\\n      <th>resto<\\/th>\\n      <th>cell_counts<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nY pasamos a ajustar el modelo, dónde vamos a considerar como efecto aleatorio la empresa y como efecto fijo el tiempo, aunque diferente para cada empresa. \n\n\nEn la fórmula de `brms` añadimos informacióna la variable respuesta, en este caso añadimos la info del tamaño muestral. Mirando cosas sobre meta-análisis con `brms` se puede añadir cosas como desviación estándar de la estimación del efecto y cosas así. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nformula <- brmsformula(\n    cell_counts | trials(n) ~  (time |empresa))\n\n# vemos las priors por defecto qeu h\n(priors <- get_prior(formula, df_wider, family = multinomial()))\n#>                 prior     class      coef   group resp    dpar nlpar lb ub\n#>                lkj(1)       cor                                           \n#>                lkj(1)       cor           empresa                         \n#>                (flat) Intercept                                           \n#>  student_t(3, 0, 2.5) Intercept                         mupsoe            \n#>  student_t(3, 0, 2.5)        sd                         mupsoe        0   \n#>  student_t(3, 0, 2.5)        sd           empresa       mupsoe        0   \n#>  student_t(3, 0, 2.5)        sd Intercept empresa       mupsoe        0   \n#>  student_t(3, 0, 2.5)        sd      time empresa       mupsoe        0   \n#>  student_t(3, 0, 2.5) Intercept                        muresto            \n#>  student_t(3, 0, 2.5)        sd                        muresto        0   \n#>  student_t(3, 0, 2.5)        sd           empresa      muresto        0   \n#>  student_t(3, 0, 2.5)        sd Intercept empresa      muresto        0   \n#>  student_t(3, 0, 2.5)        sd      time empresa      muresto        0   \n#>  student_t(3, 0, 2.5) Intercept                        musumar            \n#>  student_t(3, 0, 2.5)        sd                        musumar        0   \n#>  student_t(3, 0, 2.5)        sd           empresa      musumar        0   \n#>  student_t(3, 0, 2.5)        sd Intercept empresa      musumar        0   \n#>  student_t(3, 0, 2.5)        sd      time empresa      musumar        0   \n#>  student_t(3, 0, 2.5) Intercept                          muvox            \n#>  student_t(3, 0, 2.5)        sd                          muvox        0   \n#>  student_t(3, 0, 2.5)        sd           empresa        muvox        0   \n#>  student_t(3, 0, 2.5)        sd Intercept empresa        muvox        0   \n#>  student_t(3, 0, 2.5)        sd      time empresa        muvox        0   \n#>        source\n#>       default\n#>  (vectorized)\n#>       default\n#>       default\n#>       default\n#>  (vectorized)\n#>  (vectorized)\n#>  (vectorized)\n#>       default\n#>       default\n#>  (vectorized)\n#>  (vectorized)\n#>  (vectorized)\n#>       default\n#>       default\n#>  (vectorized)\n#>  (vectorized)\n#>  (vectorized)\n#>       default\n#>       default\n#>  (vectorized)\n#>  (vectorized)\n#>  (vectorized)\n```\n:::\n\n\n\nAjustamos el modelo \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_multinomial <-\n    brm(\n        formula,\n        df_wider,\n        multinomial(),\n        prior = priors,\n        iter = 4000,\n        warmup = 1000,\n        cores = 4,\n        chains = 4,\n        seed = 47,\n        backend = \"cmdstanr\",\n        control = list(adapt_delta = 0.95), \n        refresh = 0\n    )\n#> Running MCMC with 4 parallel chains...\n#> \n#> Chain 1 finished in 8.5 seconds.\n#> Chain 3 finished in 8.6 seconds.\n#> Chain 4 finished in 8.7 seconds.\n#> Chain 2 finished in 9.7 seconds.\n#> \n#> All 4 chains finished successfully.\n#> Mean chain execution time: 8.9 seconds.\n#> Total execution time: 9.8 seconds.\n\nsummary(model_multinomial)\n#>  Family: multinomial \n#>   Links: mupsoe = logit; musumar = logit; muvox = logit; muresto = logit \n#> Formula: cell_counts | trials(n) ~ (time | empresa) \n#>    Data: df_wider (Number of observations: 23) \n#>   Draws: 4 chains, each with iter = 4000; warmup = 1000; thin = 1;\n#>          total post-warmup draws = 12000\n#> \n#> Group-Level Effects: \n#> ~empresa (Number of levels: 10) \n#>                                     Estimate Est.Error l-95% CI u-95% CI Rhat\n#> sd(mupsoe_Intercept)                    0.05      0.03     0.00     0.13 1.00\n#> sd(mupsoe_time)                         0.00      0.00     0.00     0.01 1.00\n#> sd(musumar_Intercept)                   0.14      0.06     0.05     0.28 1.00\n#> sd(musumar_time)                        0.00      0.00     0.00     0.02 1.00\n#> sd(muvox_Intercept)                     0.11      0.06     0.01     0.25 1.00\n#> sd(muvox_time)                          0.01      0.01     0.00     0.02 1.00\n#> sd(muresto_Intercept)                   0.05      0.04     0.00     0.16 1.00\n#> sd(muresto_time)                        0.01      0.00     0.00     0.01 1.00\n#> cor(mupsoe_Intercept,mupsoe_time)       0.06      0.58    -0.94     0.95 1.00\n#> cor(musumar_Intercept,musumar_time)     0.28      0.56    -0.88     0.98 1.00\n#> cor(muvox_Intercept,muvox_time)        -0.03      0.56    -0.95     0.93 1.00\n#> cor(muresto_Intercept,muresto_time)     0.21      0.58    -0.91     0.98 1.00\n#>                                     Bulk_ESS Tail_ESS\n#> sd(mupsoe_Intercept)                    3451     3599\n#> sd(mupsoe_time)                         2876     5041\n#> sd(musumar_Intercept)                   3697     3162\n#> sd(musumar_time)                        3236     4666\n#> sd(muvox_Intercept)                     2951     2225\n#> sd(muvox_time)                          1842     4433\n#> sd(muresto_Intercept)                   5233     4971\n#> sd(muresto_time)                        3078     3653\n#> cor(mupsoe_Intercept,mupsoe_time)       5869     6716\n#> cor(musumar_Intercept,musumar_time)     7015     7025\n#> cor(muvox_Intercept,muvox_time)         6490     6740\n#> cor(muresto_Intercept,muresto_time)     4284     6808\n#> \n#> Population-Level Effects: \n#>                   Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\n#> mupsoe_Intercept     -0.20      0.03    -0.25    -0.15 1.00     6469     6941\n#> musumar_Intercept    -0.99      0.05    -1.09    -0.90 1.00     4232     5876\n#> muvox_Intercept      -0.97      0.05    -1.06    -0.87 1.00     3835     6313\n#> muresto_Intercept    -1.10      0.03    -1.15    -1.04 1.00     7182     7017\n#> \n#> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS\n#> and Tail_ESS are effective sample size measures, and Rhat is the potential\n#> scale reduction factor on split chains (at convergence, Rhat = 1).\n```\n:::\n\n\nY ya tendríamos el modelo. \n\n\n## ¿Predicción / estimación?\n\nVuelvo a decir que esto es sólo por diversión, para hacer algo serio tendría que haber usado mayor número de encuestas y realizadas en diferentes momentos del tiempo, tener las estimaciones que daban en cada provincia y realizar la estimación de escaños. Todo eso y más ya lo hace, y muy bien, Kiko Llaneras para [_El País_ ](https://elpais.com/espana/elecciones-generales/2023-07-19/quien-va-a-ganar-las-elecciones-esto-dicen-las-encuestas.html)\n\n¿Cómo podríamos estimar lo que va a pasar el día de las elecciones con este modelo?\n\n\nPues podríamos considerar que las elecciones fueran una encuesta realizada por una _empresa_ que no tengo en los datos (un nuevo nivel de la variable empresa) , en este caso el gobierno, y ponemos la variable `time = 0` \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pongo n = 1 para que me devuelva las probabilidades , si ponenemos n = 15000000 nos devolvería una # estimación de cuántos votos van a cada partido\n\nnewdata <- tibble(\n    empresa = \"votaciones_dia_23\", \n    time = 0,\n    n= 1)\n\nnewdata\n#> # A tibble: 1 × 3\n#>   empresa            time     n\n#>   <chr>             <dbl> <dbl>\n#> 1 votaciones_dia_23     0     1\n```\n:::\n\n\n\nAhora utilizando una función de la librería `tidybayes` tenemos una forma fácil de añadir las _posterior predict_\n\n\n::: {.cell}\n\n```{.r .cell-code}\nestimaciones <-  newdata %>% \n    add_epred_draws(model_multinomial, allow_new_levels = TRUE) %>% \n    mutate(partido = as_factor(.category)) |> \n    select(-.category)\n\ndim(estimaciones )\n#> [1] 60000    10\n\nDT::datatable(head(estimaciones, 100))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-9e5a2873549ac328692c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9e5a2873549ac328692c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\"],[\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\"],[\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\",\"votaciones_dia_23\"],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],[0.3348764792741892,0.360141924698862,0.3377926939741938,0.3581718709828434,0.3348415171429271,0.3524809625117169,0.3344930769621622,0.3195639212800823,0.3563780059630699,0.3418465619936137,0.365749204665776,0.3433250384829394,0.3172914392552872,0.3491083460612358,0.3470959876101485,0.3236451848060604,0.3500144856687952,0.3452797885582,0.3204820278813746,0.3334596859746268,0.3338789466442904,0.3575483192487105,0.3513179329444838,0.351573548842922,0.3454497236504279,0.3494485990135306,0.3437367023783236,0.3281630909844058,0.3466366507952454,0.3510321345987368,0.3448143172719388,0.355950088959441,0.3271368600767607,0.3417287528506385,0.342576053520492,0.3532001977687373,0.3637248348314827,0.3559446877837851,0.3451690962453341,0.3386802590461871,0.3624429724766857,0.3476988556423649,0.3516700821350487,0.3487935883397446,0.3454133628234266,0.3582938697920235,0.3629418007296987,0.3518187569307722,0.3585801203163321,0.3268593478720657,0.3487409160364556,0.3546770936770806,0.3554993066597812,0.3414044658998225,0.3365603302181595,0.3334111637688665,0.3421120539835951,0.3350426969861691,0.3420620091117407,0.3562329084551752,0.3527989085075651,0.3526469478995282,0.3395244387326987,0.338604499881367,0.3374238766221929,0.3617382770022146,0.3472997503818719,0.3281014378868524,0.3285094289288825,0.3327667548878768,0.3509079609772923,0.3452000682919733,0.3521490185712001,0.331503819482879,0.3368677211233848,0.3476094219122812,0.358736491214292,0.3314317285538361,0.3666509576997986,0.3452584663613313,0.352313774529508,0.3409982070684882,0.3221322075542907,0.3602463651620343,0.3527320290989311,0.3424475469405104,0.3648655579859525,0.3338866396202437,0.3498464287143421,0.32044697908532,0.3393311510009658,0.3238091712823946,0.3397442531682817,0.3458262606590067,0.3636063603091039,0.3586731059436756,0.3392066519167835,0.3228827221397838,0.3441757318151841,0.3457287772330115],[\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\",\"pp\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>.category<\\/th>\\n      <th>empresa<\\/th>\\n      <th>time<\\/th>\\n      <th>n<\\/th>\\n      <th>.row<\\/th>\\n      <th>.chain<\\/th>\\n      <th>.iteration<\\/th>\\n      <th>.draw<\\/th>\\n      <th>.epred<\\/th>\\n      <th>partido<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nY tenemos 12000 estimaciones de la posteriori para cada partido. Esto se podría decir que es _equivalente_ a las 15000 simulaciones que hace Kiko con su modelo. Bueno, salvo que él en cada simulación calcula más cosas, como los escaños obtenidos etc.. \n\n\nPodemos hacer un summary de las posteriores y ver intervalo de _credibilidad_ al 80% por ejemplo \n\n\n::: {.cell}\n\n```{.r .cell-code}\nestimaciones |> \n    group_by(partido) |> \n    summarise(\n        media = mean(.epred), \n        mediana= median(.epred), \n        low = quantile(.epred, 0.05), \n        high= quantile(.epred, 0.95)\n    )\n#> # A tibble: 5 × 5\n#>   partido media mediana   low  high\n#>   <fct>   <dbl>   <dbl> <dbl> <dbl>\n#> 1 pp      0.344   0.344 0.324 0.364\n#> 2 psoe    0.282   0.282 0.265 0.298\n#> 3 sumar   0.128   0.127 0.110 0.148\n#> 4 vox     0.131   0.131 0.116 0.148\n#> 5 resto   0.115   0.115 0.105 0.125\n```\n:::\n\n\nO pintar las distribuciones. .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nestimaciones %>% \n    ggplot(aes(x=.epred, fill = partido)) +\n    geom_density(alpha = 0.5 ) +\n    scale_x_continuous(labels = scales::percent) +\n    scale_fill_manual(values = colores) +\n    labs(title=\"Agregando encuestas por diversión. Resultado\",\n        x = \"Porcentaje estimado\", \n        y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](metanalisis_files/figure-html/unnamed-chunk-11-1.png){width=80%}\n:::\n:::\n\n\n¿Qué más cosas podemos hacer? Ya que tengo las posterioris puedo usarlas y calcular las posterioris del bloque PP+ Vox o de cualquier otra cosa. \n\n\nSupongamos que hubiera 15 millones de votos válidos. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvotantes <- 15e6\nposterioris <- estimaciones  |> \n    ungroup() |> \n    mutate(votos = votantes * .epred) |> \n    select(partido, votos) |> \n    pivot_wider(names_from = partido, values_from = votos) \n\n# tenemos columnas que son listas.  hay que hacer un unnest\nposterioris\n#> # A tibble: 1 × 5\n#>   pp             psoe           sumar          vox            resto         \n#>   <list>         <list>         <list>         <list>         <list>        \n#> 1 <dbl [12,000]> <dbl [12,000]> <dbl [12,000]> <dbl [12,000]> <dbl [12,000]>\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nposterioris <- posterioris  |> \n    unnest(c(pp, psoe, sumar, vox, resto)) \n\nhead(posterioris)\n#> # A tibble: 6 × 5\n#>         pp     psoe    sumar      vox    resto\n#>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>\n#> 1 5023147. 4400631. 1873502. 2108276. 1594443.\n#> 2 5402129. 4297818. 1791318. 1783497. 1725237.\n#> 3 5066890. 4415547. 1741994. 1990458. 1785111.\n#> 4 5372578. 4119759. 1768716. 1833665. 1905282.\n#> 5 5022623. 4342021. 2004152. 1986356. 1644848.\n#> 6 5287214. 4283855. 1876413. 1714759. 1837759.\n```\n:::\n\n\n\nSumo votos de los bloques para cada una de las 12000 filas. Además. añado al bloque de la izquierda el 50% de los votos que están en resto. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nposterioris <- posterioris |> \n    mutate(\n        derecha = pp + vox, \n        izquierda = psoe + sumar + 0.5*resto) |> \n    mutate(derecha_posterior = derecha / votantes, \n           izquierda_posterior = izquierda/votantes)\n\nposterioris |> \n    head(20)\n#> # A tibble: 20 × 9\n#>          pp     psoe    sumar     vox  resto derecha izquierda derecha_posterior\n#>       <dbl>    <dbl>    <dbl>   <dbl>  <dbl>   <dbl>     <dbl>             <dbl>\n#>  1 5023147. 4400631. 1873502.  2.11e6 1.59e6  7.13e6  7071355.             0.475\n#>  2 5402129. 4297818. 1791318.  1.78e6 1.73e6  7.19e6  6951755.             0.479\n#>  3 5066890. 4415547. 1741994.  1.99e6 1.79e6  7.06e6  7050097.             0.470\n#>  4 5372578. 4119759. 1768716.  1.83e6 1.91e6  7.21e6  6841116.             0.480\n#>  5 5022623. 4342021. 2004152.  1.99e6 1.64e6  7.01e6  7168597.             0.467\n#>  6 5287214. 4283855. 1876413.  1.71e6 1.84e6  7.00e6  7079147.             0.467\n#>  7 5017396. 4110837. 2085376.  2.23e6 1.56e6  7.25e6  6974129.             0.483\n#>  8 4793459. 4479950. 2223135.  2.01e6 1.49e6  6.80e6  7449523.             0.454\n#>  9 5345670. 4142111. 1795447.  2.03e6 1.69e6  7.38e6  6781142.             0.492\n#> 10 5127698. 4210917. 1935521.  1.91e6 1.82e6  7.04e6  7055529.             0.469\n#> 11 5486238. 4199075. 1588582.  1.86e6 1.87e6  7.35e6  6720877.             0.490\n#> 12 5149876. 4219835. 2100181.  1.78e6 1.75e6  6.93e6  7193195.             0.462\n#> 13 4759372. 4465230. 2329286.  1.84e6 1.60e6  6.60e6  7596283.             0.440\n#> 14 5236625. 4338129. 1747429.  1.95e6 1.73e6  7.18e6  6950958.             0.479\n#> 15 5206440. 4387667. 1749035.  1.99e6 1.67e6  7.19e6  6971347.             0.480\n#> 16 4854678. 4329145. 2184347.  1.77e6 1.86e6  6.62e6  7444375.             0.442\n#> 17 5250217. 4518969. 1701659.  1.75e6 1.78e6  7.00e6  7110288.             0.467\n#> 18 5179197. 4451222. 1814213.  1.79e6 1.76e6  6.97e6  7147712.             0.465\n#> 19 4807230. 4425101. 1768384.  2.44e6 1.56e6  7.25e6  6974064.             0.483\n#> 20 5001895. 3986637. 2109063.  2.05e6 1.85e6  7.05e6  7022137.             0.470\n#> # ℹ 1 more variable: izquierda_posterior <dbl>\n```\n:::\n\n\n\nAhora nos podemos hacer preguntas como , ¿en cuántas de estas posterioris gana el bloque de la derecha así construido al de la izquierda? o ¿en cuántas la diferencia que le saca el bloque de la derecha es mayor a un punto porcentual? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nposterioris |> \n    mutate(gana_derecha = derecha_posterior>izquierda_posterior, \n           gana_derecha_mas1_pct = (derecha_posterior - izquierda_posterior) >= 0.01) |> \n    summarise(\n        mean(gana_derecha),\n        mean(gana_derecha_mas1_pct)\n        )\n#> # A tibble: 1 × 2\n#>   `mean(gana_derecha)` `mean(gana_derecha_mas1_pct)`\n#>                  <dbl>                         <dbl>\n#> 1                0.673                         0.480\n```\n:::\n\n\n\n\n## Actualización [2023-07-24]\n\nYa fueron las elecciones generales y escrutado al 100% se tiene que \n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-87597caadca2bf36ceaa\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-87597caadca2bf36ceaa\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\"],[\"pp\",\"psoe\",\"sumar\",\"vox\"],[33.05,31.7,12.31,12.39]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>partido<\\/th>\\n      <th>porcentaje_sobre_voto_valido<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nY claramente el promedio de encuestas infraestimó el voto al psoe. Para pp, sumar o o vox si que acertaron relativamente bien, aunque pp y vox se han quedado más cerda del extremo inferior del intervalo que del punto medio. \n\n\n### ¿Si hubiera considerado más encuestas habría cambiado algo?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_update <-  read_csv(here::here(\"data/encuestas_agregadas_39.csv\")) |> \n    select(empresa, time, partido, everything())\n# Añado botones para descarga de datos \ndatatable(df, extensions = \"Buttons\",\n          options = list(\n              dom = 'Bfrtip',\n              buttons = c('copy', 'csv', 'excel', 'pdf') )\n          )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-92033e6faf07d71db156\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-92033e6faf07d71db156\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Buttons\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\"],[\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"electo_mania\",\"electo_mania\",\"electo_mania\",\"electo_mania\",\"electo_mania\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"prisa\",\"prisa\",\"prisa\",\"prisa\",\"prisa\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"celeste_tel\",\"celeste_tel\",\"celeste_tel\",\"celeste_tel\",\"celeste_tel\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"gesop\",\"gesop\",\"gesop\",\"gesop\",\"gesop\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"prisa\",\"prisa\",\"prisa\",\"prisa\",\"prisa\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\"],[-21,-21,-21,-21,-21,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-13,-13,-13,-13,-13,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-11,-10,-10,-10,-10,-10,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7],[\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\",\"pp\",\"psoe\",\"sumar\",\"vox\",\"resto\"],[0.326,0.27,0.129,0.144,0.131,0.368,0.282,0.128,0.115,0.107,0.347,0.285,0.128,0.132,0.1080000000000001,0.346,0.286,0.123,0.127,0.1180000000000001,0.34,0.291,0.123,0.134,0.112,0.367,0.279,0.12,0.12,0.114,0.36,0.278,0.122,0.124,0.116,0.312,0.295,0.133,0.147,0.113,0.344,0.286,0.127,0.13,0.113,0.311,0.288,0.15,0.145,0.1060000000000001,0.365,0.284,0.115,0.114,0.122,0.367,0.282,0.116,0.124,0.111,0.363,0.277,0.119,0.12,0.121,0.322,0.291,0.144,0.142,0.101,0.338,0.286,0.127,0.139,0.11,0.355,0.263,0.127,0.135,0.12,0.306,0.274,0.144,0.15,0.126,0.37,0.284,0.115,0.119,0.112,0.372,0.283,0.113,0.111,0.121,0.356,0.266,0.127,0.131,0.12,0.329,0.287,0.137,0.135,0.112,0.322,0.286,0.138,0.139,0.115,0.335,0.283,0.132,0.137,0.113],[1447,1447,1447,1447,1447,1503,1503,1503,1503,1503,2880,2880,2880,2880,2880,4482,4482,4482,4482,4482,2788,2788,2788,2788,2788,5000,5000,5000,5000,5000,1000,1000,1000,1000,1000,2000,2000,2000,2000,2000,4455,4455,4455,4455,4455,1300,1300,1300,1300,1300,1100,1100,1100,1100,1100,5502,5502,5502,5502,5502,1000,1000,1000,1000,1000,1300,1300,1300,1300,1300,800,800,800,800,800,1500,1500,1500,1500,1500,1200,1200,1200,1200,1200,7002,7002,7002,7002,7002,1000,1000,1000,1000,1000,1500,1500,1500,1500,1500,2000,2000,2000,2000,2000,1600,1600,1600,1600,1600,1500,1500,1500,1500,1500],[472,391,187,207,190,553,424,192,173,161,999,821,369,380,311,1551,1282,551,569,529,948,811,343,374,312,1835,1395,600,600,570,360,278,122,124,116,624,590,266,294,226,1533,1274,566,579,503,404,374,196,188,138,402,312,127,125,134,2019,1552,638,682,611,363,277,119,120,121,419,378,187,185,131,270,229,102,111,88,532,394,190,204,180,367,329,173,180,151,2591,1989,805,833,784,372,283,113,111,121,534,399,190,197,180,658,574,274,270,224,515,458,221,222,184,503,424,198,206,169]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>empresa<\\/th>\\n      <th>time<\\/th>\\n      <th>partido<\\/th>\\n      <th>estim<\\/th>\\n      <th>n<\\/th>\\n      <th>votos<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"Bfrtip\",\"buttons\":[\"copy\",\"csv\",\"excel\",\"pdf\"],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,4,5,6]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndf_wider <- df_update |> \n    select(-estim) |> \n    pivot_wider( id_cols = c(empresa, n, time),\n                 names_from = partido, \n                 values_from = votos) |> \n    arrange(empresa)\n\ndf_wider$cell_counts <- with(df_wider, cbind(resto,pp, psoe,sumar, vox))\n\nDT::datatable(df_wider)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-e14a40cab2cdd3954738\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e14a40cab2cdd3954738\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\"],[\"celeste_tel\",\"celeste_tel\",\"celeste_tel\",\"cis\",\"cis\",\"electo_mania\",\"electo_mania\",\"gad3\",\"gad3\",\"gad3\",\"gad3\",\"gesop\",\"invymark\",\"invymark\",\"nc_report\",\"nc_report\",\"nc_report\",\"nc_report\",\"ok_diario\",\"ok_diario\",\"ok_diario\",\"prisa\",\"prisa\",\"prisa\",\"prisa\",\"sigma2\",\"sigma2\",\"sigma2\",\"sigma2\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"simple_logica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"socio_metrica\",\"target_point\"],[1100,1100,1100,7407,4166,3557,2788,1503,5000,5502,7002,1200,1200,1200,1000,1000,1000,1000,1500,1500,1500,2000,2000,2000,2000,1711,2880,4482,4455,1014,1027,1300,1300,1600,1140,1447,800,1500,1027],[-93,-32,-11,-46,-79,-43,-12,-20,-12,-11,-7,-8,-37,-30,-36,-12,-11,-7,-51,-10,-7,-89,-39,-12,-7,-45,-20,-13,-12,-102,-45,-12,-11,-7,-50,-21,-11,-7,-51],[354,376,402,2311,1304,1117,948,553,1835,2019,2591,367,385,382,347,360,363,372,514,532,534,568,662,624,658,592,999,1551,1533,305,350,404,419,515,363,472,270,503,353],[261,294,312,2274,1229,921,811,424,1395,1552,1989,329,290,296,255,278,277,283,332,394,399,502,548,590,574,472,821,1282,1274,266,287,374,378,458,272,391,229,424,283],[165,141,127,1059,558,527,343,192,600,638,805,173,169,173,129,122,119,113,209,190,190,364,262,266,274,216,369,551,566,183,131,196,187,221,168,187,102,198,132],[159,154,125,785,617,569,374,173,600,682,833,180,178,180,141,124,120,111,238,204,197,290,276,294,270,203,380,569,579,156,145,188,185,222,183,207,111,206,140],[161,135,134,978,458,423,312,161,570,611,784,151,178,169,128,116,121,121,207,180,180,276,252,226,224,228,311,529,503,104,114,138,131,184,154,190,88,169,119],[[161,354,261,165,159],[135,376,294,141,154],[134,402,312,127,125],[978,2311,2274,1059,785],[458,1304,1229,558,617],[423,1117,921,527,569],[312,948,811,343,374],[161,553,424,192,173],[570,1835,1395,600,600],[611,2019,1552,638,682],[784,2591,1989,805,833],[151,367,329,173,180],[178,385,290,169,178],[169,382,296,173,180],[128,347,255,129,141],[116,360,278,122,124],[121,363,277,119,120],[121,372,283,113,111],[207,514,332,209,238],[180,532,394,190,204],[180,534,399,190,197],[276,568,502,364,290],[252,662,548,262,276],[226,624,590,266,294],[224,658,574,274,270],[228,592,472,216,203],[311,999,821,369,380],[529,1551,1282,551,569],[503,1533,1274,566,579],[104,305,266,183,156],[114,350,287,131,145],[138,404,374,196,188],[131,419,378,187,185],[184,515,458,221,222],[154,363,272,168,183],[190,472,391,187,207],[88,270,229,102,111],[169,503,424,198,206],[119,353,283,132,140]]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>empresa<\\/th>\\n      <th>n<\\/th>\\n      <th>time<\\/th>\\n      <th>pp<\\/th>\\n      <th>psoe<\\/th>\\n      <th>sumar<\\/th>\\n      <th>vox<\\/th>\\n      <th>resto<\\/th>\\n      <th>cell_counts<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n\n# cambio un poco la formla pq quiero efecto fijo del tiempo además del varying \n# slope\nformula <- brmsformula(\n    cell_counts | trials(n) ~ time +  (time |empresa))\n\nmodel_multinomial_update <- brm(formula, df_wider, multinomial(),\n                          iter = 4000, warmup = 1000, cores = 4, chains = 4,\n                          seed = 3,\n                          backend = \"cmdstanr\", \n                         control = list(adapt_delta = 0.95)\n)\n#> Running MCMC with 4 parallel chains...\n#> \n#> Chain 1 Iteration:    1 / 4000 [  0%]  (Warmup) \n#> Chain 2 Iteration:    1 / 4000 [  0%]  (Warmup) \n#> Chain 3 Iteration:    1 / 4000 [  0%]  (Warmup) \n#> Chain 4 Iteration:    1 / 4000 [  0%]  (Warmup) \n#> Chain 3 Iteration:  100 / 4000 [  2%]  (Warmup) \n#> Chain 1 Iteration:  100 / 4000 [  2%]  (Warmup) \n#> Chain 2 Iteration:  100 / 4000 [  2%]  (Warmup) \n#> Chain 4 Iteration:  100 / 4000 [  2%]  (Warmup) \n#> Chain 3 Iteration:  200 / 4000 [  5%]  (Warmup) \n#> Chain 1 Iteration:  200 / 4000 [  5%]  (Warmup) \n#> Chain 2 Iteration:  200 / 4000 [  5%]  (Warmup) \n#> Chain 3 Iteration:  300 / 4000 [  7%]  (Warmup) \n#> Chain 4 Iteration:  200 / 4000 [  5%]  (Warmup) \n#> Chain 3 Iteration:  400 / 4000 [ 10%]  (Warmup) \n#> Chain 2 Iteration:  300 / 4000 [  7%]  (Warmup) \n#> Chain 1 Iteration:  300 / 4000 [  7%]  (Warmup) \n#> Chain 2 Iteration:  400 / 4000 [ 10%]  (Warmup) \n#> Chain 3 Iteration:  500 / 4000 [ 12%]  (Warmup) \n#> Chain 4 Iteration:  300 / 4000 [  7%]  (Warmup) \n#> Chain 1 Iteration:  400 / 4000 [ 10%]  (Warmup) \n#> Chain 3 Iteration:  600 / 4000 [ 15%]  (Warmup) \n#> Chain 2 Iteration:  500 / 4000 [ 12%]  (Warmup) \n#> Chain 4 Iteration:  400 / 4000 [ 10%]  (Warmup) \n#> Chain 1 Iteration:  500 / 4000 [ 12%]  (Warmup) \n#> Chain 3 Iteration:  700 / 4000 [ 17%]  (Warmup) \n#> Chain 2 Iteration:  600 / 4000 [ 15%]  (Warmup) \n#> Chain 1 Iteration:  600 / 4000 [ 15%]  (Warmup) \n#> Chain 3 Iteration:  800 / 4000 [ 20%]  (Warmup) \n#> Chain 4 Iteration:  500 / 4000 [ 12%]  (Warmup) \n#> Chain 2 Iteration:  700 / 4000 [ 17%]  (Warmup) \n#> Chain 1 Iteration:  700 / 4000 [ 17%]  (Warmup) \n#> Chain 3 Iteration:  900 / 4000 [ 22%]  (Warmup) \n#> Chain 4 Iteration:  600 / 4000 [ 15%]  (Warmup) \n#> Chain 2 Iteration:  800 / 4000 [ 20%]  (Warmup) \n#> Chain 1 Iteration:  800 / 4000 [ 20%]  (Warmup) \n#> Chain 3 Iteration: 1000 / 4000 [ 25%]  (Warmup) \n#> Chain 3 Iteration: 1001 / 4000 [ 25%]  (Sampling) \n#> Chain 4 Iteration:  700 / 4000 [ 17%]  (Warmup) \n#> Chain 2 Iteration:  900 / 4000 [ 22%]  (Warmup) \n#> Chain 1 Iteration:  900 / 4000 [ 22%]  (Warmup) \n#> Chain 3 Iteration: 1100 / 4000 [ 27%]  (Sampling) \n#> Chain 4 Iteration:  800 / 4000 [ 20%]  (Warmup) \n#> Chain 1 Iteration: 1000 / 4000 [ 25%]  (Warmup) \n#> Chain 1 Iteration: 1001 / 4000 [ 25%]  (Sampling) \n#> Chain 2 Iteration: 1000 / 4000 [ 25%]  (Warmup) \n#> Chain 2 Iteration: 1001 / 4000 [ 25%]  (Sampling) \n#> Chain 3 Iteration: 1200 / 4000 [ 30%]  (Sampling) \n#> Chain 4 Iteration:  900 / 4000 [ 22%]  (Warmup) \n#> Chain 1 Iteration: 1100 / 4000 [ 27%]  (Sampling) \n#> Chain 2 Iteration: 1100 / 4000 [ 27%]  (Sampling) \n#> Chain 3 Iteration: 1300 / 4000 [ 32%]  (Sampling) \n#> Chain 4 Iteration: 1000 / 4000 [ 25%]  (Warmup) \n#> Chain 4 Iteration: 1001 / 4000 [ 25%]  (Sampling) \n#> Chain 1 Iteration: 1200 / 4000 [ 30%]  (Sampling) \n#> Chain 2 Iteration: 1200 / 4000 [ 30%]  (Sampling) \n#> Chain 3 Iteration: 1400 / 4000 [ 35%]  (Sampling) \n#> Chain 4 Iteration: 1100 / 4000 [ 27%]  (Sampling) \n#> Chain 2 Iteration: 1300 / 4000 [ 32%]  (Sampling) \n#> Chain 1 Iteration: 1300 / 4000 [ 32%]  (Sampling) \n#> Chain 3 Iteration: 1500 / 4000 [ 37%]  (Sampling) \n#> Chain 4 Iteration: 1200 / 4000 [ 30%]  (Sampling) \n#> Chain 2 Iteration: 1400 / 4000 [ 35%]  (Sampling) \n#> Chain 1 Iteration: 1400 / 4000 [ 35%]  (Sampling) \n#> Chain 3 Iteration: 1600 / 4000 [ 40%]  (Sampling) \n#> Chain 4 Iteration: 1300 / 4000 [ 32%]  (Sampling) \n#> Chain 1 Iteration: 1500 / 4000 [ 37%]  (Sampling) \n#> Chain 2 Iteration: 1500 / 4000 [ 37%]  (Sampling) \n#> Chain 3 Iteration: 1700 / 4000 [ 42%]  (Sampling) \n#> Chain 4 Iteration: 1400 / 4000 [ 35%]  (Sampling) \n#> Chain 1 Iteration: 1600 / 4000 [ 40%]  (Sampling) \n#> Chain 2 Iteration: 1600 / 4000 [ 40%]  (Sampling) \n#> Chain 3 Iteration: 1800 / 4000 [ 45%]  (Sampling) \n#> Chain 4 Iteration: 1500 / 4000 [ 37%]  (Sampling) \n#> Chain 1 Iteration: 1700 / 4000 [ 42%]  (Sampling) \n#> Chain 2 Iteration: 1700 / 4000 [ 42%]  (Sampling) \n#> Chain 3 Iteration: 1900 / 4000 [ 47%]  (Sampling) \n#> Chain 4 Iteration: 1600 / 4000 [ 40%]  (Sampling) \n#> Chain 2 Iteration: 1800 / 4000 [ 45%]  (Sampling) \n#> Chain 1 Iteration: 1800 / 4000 [ 45%]  (Sampling) \n#> Chain 3 Iteration: 2000 / 4000 [ 50%]  (Sampling) \n#> Chain 4 Iteration: 1700 / 4000 [ 42%]  (Sampling) \n#> Chain 2 Iteration: 1900 / 4000 [ 47%]  (Sampling) \n#> Chain 1 Iteration: 1900 / 4000 [ 47%]  (Sampling) \n#> Chain 3 Iteration: 2100 / 4000 [ 52%]  (Sampling) \n#> Chain 4 Iteration: 1800 / 4000 [ 45%]  (Sampling) \n#> Chain 2 Iteration: 2000 / 4000 [ 50%]  (Sampling) \n#> Chain 1 Iteration: 2000 / 4000 [ 50%]  (Sampling) \n#> Chain 3 Iteration: 2200 / 4000 [ 55%]  (Sampling) \n#> Chain 4 Iteration: 1900 / 4000 [ 47%]  (Sampling) \n#> Chain 1 Iteration: 2100 / 4000 [ 52%]  (Sampling) \n#> Chain 2 Iteration: 2100 / 4000 [ 52%]  (Sampling) \n#> Chain 3 Iteration: 2300 / 4000 [ 57%]  (Sampling) \n#> Chain 4 Iteration: 2000 / 4000 [ 50%]  (Sampling) \n#> Chain 1 Iteration: 2200 / 4000 [ 55%]  (Sampling) \n#> Chain 2 Iteration: 2200 / 4000 [ 55%]  (Sampling) \n#> Chain 3 Iteration: 2400 / 4000 [ 60%]  (Sampling) \n#> Chain 4 Iteration: 2100 / 4000 [ 52%]  (Sampling) \n#> Chain 1 Iteration: 2300 / 4000 [ 57%]  (Sampling) \n#> Chain 2 Iteration: 2300 / 4000 [ 57%]  (Sampling) \n#> Chain 3 Iteration: 2500 / 4000 [ 62%]  (Sampling) \n#> Chain 4 Iteration: 2200 / 4000 [ 55%]  (Sampling) \n#> Chain 2 Iteration: 2400 / 4000 [ 60%]  (Sampling) \n#> Chain 1 Iteration: 2400 / 4000 [ 60%]  (Sampling) \n#> Chain 3 Iteration: 2600 / 4000 [ 65%]  (Sampling) \n#> Chain 4 Iteration: 2300 / 4000 [ 57%]  (Sampling) \n#> Chain 2 Iteration: 2500 / 4000 [ 62%]  (Sampling) \n#> Chain 1 Iteration: 2500 / 4000 [ 62%]  (Sampling) \n#> Chain 3 Iteration: 2700 / 4000 [ 67%]  (Sampling) \n#> Chain 4 Iteration: 2400 / 4000 [ 60%]  (Sampling) \n#> Chain 2 Iteration: 2600 / 4000 [ 65%]  (Sampling) \n#> Chain 1 Iteration: 2600 / 4000 [ 65%]  (Sampling) \n#> Chain 3 Iteration: 2800 / 4000 [ 70%]  (Sampling) \n#> Chain 4 Iteration: 2500 / 4000 [ 62%]  (Sampling) \n#> Chain 1 Iteration: 2700 / 4000 [ 67%]  (Sampling) \n#> Chain 2 Iteration: 2700 / 4000 [ 67%]  (Sampling) \n#> Chain 3 Iteration: 2900 / 4000 [ 72%]  (Sampling) \n#> Chain 4 Iteration: 2600 / 4000 [ 65%]  (Sampling) \n#> Chain 1 Iteration: 2800 / 4000 [ 70%]  (Sampling) \n#> Chain 2 Iteration: 2800 / 4000 [ 70%]  (Sampling) \n#> Chain 3 Iteration: 3000 / 4000 [ 75%]  (Sampling) \n#> Chain 4 Iteration: 2700 / 4000 [ 67%]  (Sampling) \n#> Chain 2 Iteration: 2900 / 4000 [ 72%]  (Sampling) \n#> Chain 1 Iteration: 2900 / 4000 [ 72%]  (Sampling) \n#> Chain 3 Iteration: 3100 / 4000 [ 77%]  (Sampling) \n#> Chain 4 Iteration: 2800 / 4000 [ 70%]  (Sampling) \n#> Chain 2 Iteration: 3000 / 4000 [ 75%]  (Sampling) \n#> Chain 1 Iteration: 3000 / 4000 [ 75%]  (Sampling) \n#> Chain 3 Iteration: 3200 / 4000 [ 80%]  (Sampling) \n#> Chain 4 Iteration: 2900 / 4000 [ 72%]  (Sampling) \n#> Chain 1 Iteration: 3100 / 4000 [ 77%]  (Sampling) \n#> Chain 2 Iteration: 3100 / 4000 [ 77%]  (Sampling) \n#> Chain 3 Iteration: 3300 / 4000 [ 82%]  (Sampling) \n#> Chain 4 Iteration: 3000 / 4000 [ 75%]  (Sampling) \n#> Chain 1 Iteration: 3200 / 4000 [ 80%]  (Sampling) \n#> Chain 2 Iteration: 3200 / 4000 [ 80%]  (Sampling) \n#> Chain 3 Iteration: 3400 / 4000 [ 85%]  (Sampling) \n#> Chain 4 Iteration: 3100 / 4000 [ 77%]  (Sampling) \n#> Chain 2 Iteration: 3300 / 4000 [ 82%]  (Sampling) \n#> Chain 1 Iteration: 3300 / 4000 [ 82%]  (Sampling) \n#> Chain 3 Iteration: 3500 / 4000 [ 87%]  (Sampling) \n#> Chain 4 Iteration: 3200 / 4000 [ 80%]  (Sampling) \n#> Chain 1 Iteration: 3400 / 4000 [ 85%]  (Sampling) \n#> Chain 2 Iteration: 3400 / 4000 [ 85%]  (Sampling) \n#> Chain 3 Iteration: 3600 / 4000 [ 90%]  (Sampling) \n#> Chain 4 Iteration: 3300 / 4000 [ 82%]  (Sampling) \n#> Chain 1 Iteration: 3500 / 4000 [ 87%]  (Sampling) \n#> Chain 2 Iteration: 3500 / 4000 [ 87%]  (Sampling) \n#> Chain 3 Iteration: 3700 / 4000 [ 92%]  (Sampling) \n#> Chain 4 Iteration: 3400 / 4000 [ 85%]  (Sampling) \n#> Chain 1 Iteration: 3600 / 4000 [ 90%]  (Sampling) \n#> Chain 2 Iteration: 3600 / 4000 [ 90%]  (Sampling) \n#> Chain 3 Iteration: 3800 / 4000 [ 95%]  (Sampling) \n#> Chain 4 Iteration: 3500 / 4000 [ 87%]  (Sampling) \n#> Chain 1 Iteration: 3700 / 4000 [ 92%]  (Sampling) \n#> Chain 2 Iteration: 3700 / 4000 [ 92%]  (Sampling) \n#> Chain 3 Iteration: 3900 / 4000 [ 97%]  (Sampling) \n#> Chain 4 Iteration: 3600 / 4000 [ 90%]  (Sampling) \n#> Chain 1 Iteration: 3800 / 4000 [ 95%]  (Sampling) \n#> Chain 2 Iteration: 3800 / 4000 [ 95%]  (Sampling) \n#> Chain 3 Iteration: 4000 / 4000 [100%]  (Sampling) \n#> Chain 3 finished in 24.5 seconds.\n#> Chain 4 Iteration: 3700 / 4000 [ 92%]  (Sampling) \n#> Chain 2 Iteration: 3900 / 4000 [ 97%]  (Sampling) \n#> Chain 1 Iteration: 3900 / 4000 [ 97%]  (Sampling) \n#> Chain 4 Iteration: 3800 / 4000 [ 95%]  (Sampling) \n#> Chain 1 Iteration: 4000 / 4000 [100%]  (Sampling) \n#> Chain 2 Iteration: 4000 / 4000 [100%]  (Sampling) \n#> Chain 1 finished in 25.4 seconds.\n#> Chain 2 finished in 25.4 seconds.\n#> Chain 4 Iteration: 3900 / 4000 [ 97%]  (Sampling) \n#> Chain 4 Iteration: 4000 / 4000 [100%]  (Sampling) \n#> Chain 4 finished in 26.1 seconds.\n#> \n#> All 4 chains finished successfully.\n#> Mean chain execution time: 25.3 seconds.\n#> Total execution time: 26.2 seconds.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nestimaciones_update <-  newdata %>% \n    add_epred_draws(model_multinomial_update, allow_new_levels = TRUE) %>% \n    mutate(partido = as_factor(.category)) |> \n    select(-.category)\n```\n:::\n\n\nPues parece que no cambia mucho.  Si acaso añade más incertidumbre y ahora el resultado del psoe está dentro del intervalo de credibilidad del 90%\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nestimaciones_update |> \n    group_by(partido) |> \n    summarise(\n        media = mean(.epred), \n        mediana= median(.epred), \n        low = quantile(.epred, 0.05), \n        high= quantile(.epred, 0.95)\n    )\n#> # A tibble: 5 × 5\n#>   partido media mediana    low  high\n#>   <fct>   <dbl>   <dbl>  <dbl> <dbl>\n#> 1 resto   0.115   0.115 0.108  0.126\n#> 2 pp      0.343   0.343 0.310  0.375\n#> 3 psoe    0.292   0.290 0.275  0.322\n#> 4 sumar   0.125   0.124 0.113  0.139\n#> 5 vox     0.125   0.128 0.0789 0.150\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n\nestimaciones_update %>% \n    ggplot(aes(x=.epred, fill = partido)) +\n    geom_density(alpha = 0.5 ) +\n    scale_x_continuous(labels = scales::percent) +\n    scale_fill_manual(values = colores) +\n    labs(title=\"Agregando encuestas por diversión. Resultado\",\n         subtitle = \"Actualización con más encuestas\",\n        x = \"Porcentaje estimado\", \n        y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](metanalisis_files/figure-html/unnamed-chunk-22-1.png){width=80%}\n:::\n:::\n\n\nCosas interesantes que puedo sacar del modelo.  Por ejemplo los efectos aleatorios asociados a las diferentes empresas encuestadoras. Por ejemplo con `mupsoe_Intercept` se ve por ejemplo que la de `prisa`(40db) ,`simple_logica` (para el diario.es) sigma2 o el cis fueron las más favorables hacia el psoe.  \n\nEsto parece sugerir que los resultados de las diferentes encuestas parecen estar _afectados_ por la mano que les da de comer. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nranef(model_multinomial_update)\n#> $empresa\n#> , , mupp_Intercept\n#> \n#>                  Estimate  Est.Error        Q2.5      Q97.5\n#> celeste_tel    0.04983451 0.05847759 -0.05785386 0.17452635\n#> cis           -0.11269392 0.07921043 -0.28268055 0.01887259\n#> electo_mania   0.01266378 0.05495308 -0.08769483 0.12890022\n#> gad3           0.12708807 0.04538762  0.04470506 0.22400860\n#> gesop         -0.09336239 0.06633783 -0.23445718 0.02701568\n#> invymark      -0.08845348 0.08144761 -0.26558825 0.06216075\n#> nc_report      0.06977150 0.05506073 -0.03028796 0.18586357\n#> ok_diario      0.04076435 0.05285644 -0.05784015 0.15009835\n#> prisa         -0.02726022 0.04755849 -0.11914163 0.07052230\n#> sigma2         0.03550888 0.04398473 -0.04942665 0.12580797\n#> simple_logica -0.02710374 0.04962525 -0.12671515 0.06897185\n#> socio_metrica -0.02427102 0.05004341 -0.12195298 0.07523895\n#> target_point   0.03521051 0.09644025 -0.16213082 0.23375662\n#> \n#> , , mupp_time\n#> \n#>                    Estimate    Est.Error         Q2.5        Q97.5\n#> celeste_tel    5.601833e-04 0.0010752752 -0.001462165 0.0028845335\n#> cis           -1.858769e-03 0.0014818803 -0.005107945 0.0003605464\n#> electo_mania   8.326875e-04 0.0013083572 -0.001403193 0.0038301443\n#> gad3           6.870950e-04 0.0018649834 -0.003052465 0.0044324950\n#> gesop         -6.383980e-04 0.0018839697 -0.004635597 0.0029928842\n#> invymark       3.140981e-05 0.0019661982 -0.004053128 0.0040827335\n#> nc_report      6.845445e-04 0.0014938625 -0.002058980 0.0040297510\n#> ok_diario      5.167656e-04 0.0012166924 -0.001778642 0.0031886107\n#> prisa          6.750862e-04 0.0009813955 -0.001163746 0.0027679542\n#> sigma2        -3.516238e-04 0.0012475810 -0.003085294 0.0019836857\n#> simple_logica -1.126181e-03 0.0010989386 -0.003559223 0.0006837115\n#> socio_metrica  3.710038e-04 0.0012584726 -0.002067272 0.0031104447\n#> target_point  -3.996651e-04 0.0017999138 -0.004385952 0.0030570600\n#> \n#> , , mupsoe_Intercept\n#> \n#>                   Estimate  Est.Error        Q2.5      Q97.5\n#> celeste_tel   -0.002276998 0.02808656 -0.06507048 0.05559588\n#> cis            0.019702197 0.04093116 -0.05067533 0.11701995\n#> electo_mania   0.011364728 0.02912626 -0.03663608 0.08641640\n#> gad3           0.015223792 0.02628927 -0.02780848 0.07836367\n#> gesop         -0.016066261 0.03623679 -0.10444262 0.04282177\n#> invymark      -0.028486511 0.04541277 -0.14301735 0.04049496\n#> nc_report     -0.007220812 0.02850193 -0.07316730 0.04673424\n#> ok_diario     -0.030797624 0.03886857 -0.12636292 0.02279682\n#> prisa          0.009762308 0.02631351 -0.03663878 0.07402995\n#> sigma2         0.011121029 0.02579794 -0.03593884 0.07250188\n#> simple_logica  0.016102746 0.03142286 -0.03983507 0.08999656\n#> socio_metrica -0.008354206 0.02858118 -0.07234223 0.04903350\n#> target_point   0.009988969 0.03623881 -0.05608511 0.09806407\n#> \n#> , , mupsoe_time\n#> \n#>                    Estimate   Est.Error          Q2.5         Q97.5\n#> celeste_tel    6.351476e-05 0.001199362 -2.456705e-03  2.396963e-03\n#> cis           -3.270677e-03 0.001262601 -5.934026e-03 -9.475839e-04\n#> electo_mania   1.584091e-04 0.001340476 -2.472783e-03  2.911473e-03\n#> gad3          -1.278420e-03 0.001959843 -5.409934e-03  2.486353e-03\n#> gesop          1.001596e-03 0.002732244 -4.253542e-03  6.961284e-03\n#> invymark       3.399821e-03 0.001909472  1.128583e-05  7.474699e-03\n#> nc_report      9.755046e-04 0.001750050 -2.300850e-03  4.728513e-03\n#> ok_diario      2.827258e-03 0.001539038 -1.292829e-05  5.969975e-03\n#> prisa         -4.973800e-04 0.001138912 -2.882389e-03  1.753342e-03\n#> sigma2        -1.277384e-03 0.001435137 -4.328619e-03  1.434950e-03\n#> simple_logica -2.356142e-03 0.001293664 -5.124468e-03 -7.625871e-05\n#> socio_metrica  1.594284e-03 0.001489799 -1.132845e-03  4.691291e-03\n#> target_point  -1.411879e-03 0.001590356 -4.812724e-03  1.507244e-03\n#> \n#> , , musumar_Intercept\n#> \n#>                    Estimate  Est.Error         Q2.5      Q97.5\n#> celeste_tel   -0.0358445986 0.04957444 -0.150229100 0.04743706\n#> cis            0.0132971726 0.04651727 -0.069758368 0.12317857\n#> electo_mania   0.0070341761 0.04248783 -0.083039127 0.09161290\n#> gad3          -0.0353641132 0.03666900 -0.115859275 0.02688924\n#> gesop          0.0373218097 0.05536161 -0.054462743 0.16499042\n#> invymark      -0.0089751397 0.04854726 -0.111963050 0.08780055\n#> nc_report     -0.0406315429 0.04748837 -0.150190250 0.03561324\n#> ok_diario     -0.0102878996 0.04171049 -0.098574120 0.07398172\n#> prisa          0.0225994343 0.04031133 -0.054578180 0.10777645\n#> sigma2        -0.0082246939 0.03496083 -0.080907860 0.06160265\n#> simple_logica  0.0751187593 0.05402766 -0.009799251 0.18905942\n#> socio_metrica -0.0002657433 0.03985462 -0.084348557 0.08278825\n#> target_point  -0.0165754581 0.05666641 -0.142857825 0.09367493\n#> \n#> , , musumar_time\n#> \n#>                    Estimate    Est.Error         Q2.5        Q97.5\n#> celeste_tel    3.103610e-04 0.0008602449 -0.001373319 0.0022302135\n#> cis            3.347250e-04 0.0008624901 -0.001128795 0.0024411762\n#> electo_mania  -6.618639e-04 0.0011008107 -0.003507239 0.0008992042\n#> gad3           2.429828e-05 0.0012769107 -0.002911007 0.0026252740\n#> gesop         -8.011793e-05 0.0013149711 -0.002928823 0.0027984967\n#> invymark       1.338833e-04 0.0011282724 -0.002083171 0.0027425217\n#> nc_report      2.097078e-04 0.0011791976 -0.002183350 0.0028841215\n#> ok_diario      3.148319e-04 0.0009717670 -0.001482126 0.0026558482\n#> prisa         -6.035426e-04 0.0008646081 -0.002661508 0.0007422272\n#> sigma2         4.400805e-04 0.0010397252 -0.001275172 0.0030627337\n#> simple_logica -7.506860e-04 0.0010609271 -0.003165005 0.0009917626\n#> socio_metrica  1.864726e-05 0.0009601066 -0.002061034 0.0020858427\n#> target_point   3.113929e-04 0.0011178886 -0.001753471 0.0030024427\n#> \n#> , , muvox_Intercept\n#> \n#>                   Estimate  Est.Error        Q2.5      Q97.5\n#> celeste_tel   -0.027563257 0.10163227 -0.22536030  0.1727010\n#> cis           -0.565764453 0.13587027 -0.84565335 -0.3140112\n#> electo_mania   0.066364066 0.09618556 -0.12254760  0.2570871\n#> gad3          -0.008670455 0.07859782 -0.15700788  0.1495601\n#> gesop          0.147990408 0.10824879 -0.05956420  0.3635356\n#> invymark       0.033535523 0.14445059 -0.24711252  0.3263141\n#> nc_report     -0.070586246 0.09473895 -0.25996155  0.1156743\n#> ok_diario      0.054799569 0.09046204 -0.12134520  0.2336971\n#> prisa          0.119210914 0.08427223 -0.04170232  0.2898681\n#> sigma2         0.054515552 0.08308845 -0.10485597  0.2270518\n#> simple_logica  0.138785392 0.08591571 -0.02525560  0.3128597\n#> socio_metrica  0.078037685 0.08942748 -0.09257302  0.2565346\n#> target_point  -0.011986902 0.20139152 -0.41809745  0.3930733\n#> \n#> , , muvox_time\n#> \n#>                    Estimate   Est.Error         Q2.5        Q97.5\n#> celeste_tel    7.203336e-04 0.001784125 -0.002744172  0.004351591\n#> cis           -7.170722e-03 0.002312615 -0.011891795 -0.002824443\n#> electo_mania  -1.162150e-03 0.002241739 -0.005934080  0.002965156\n#> gad3           4.264346e-04 0.002470284 -0.004084816  0.005839640\n#> gesop          1.762831e-03 0.002799074 -0.003799805  0.007700488\n#> invymark       3.921615e-04 0.003261884 -0.006150279  0.007273604\n#> nc_report     -1.506608e-03 0.002381401 -0.006585859  0.002923375\n#> ok_diario      8.105272e-05 0.001922182 -0.003800808  0.003791748\n#> prisa          2.484377e-03 0.001586320 -0.000466300  0.005714418\n#> sigma2         2.661615e-03 0.002236228 -0.001143362  0.007573518\n#> simple_logica  1.070490e-03 0.001608866 -0.002146405  0.004289484\n#> socio_metrica  2.899506e-04 0.002028250 -0.003889796  0.004245027\n#> target_point   7.433332e-06 0.003551183 -0.007202358  0.007231719\n```\n:::\n\n\n\n\n## Coda\n\nBueno, pues así es como he pasado el sábado. ¿Cosas que le faltaría a esto para ser algo serio?\n\n* Que tuviera en cuenta más encuestas y analizara mejor qué tipo de encuestas son, sus cambios de estimación según el tiempo\n* Que añadiera estimación de escaños, lo cual no es trivial. \n* Añadir encuestas a nivel autónomico o datos de las municipales y poder hacer un modelo jerárquico en condiciones. \n* Hablando con Virgilio o Ana, queda claro que al ser encuestas a nivel nacional y tener un error muy grande a nivel provincial, es muy complicado hacer luego la predicción de escaños. \n\nY como decía al principio, seguramente esto del meta-análisis se pueda hacer de otra manera, mucho mejor, así que si alguien sabe, que lo ponga en los comentarios. \n",
    "supporting": [
      "metanalisis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.28/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<script src=\"../site_libs/jszip-1.13.4/jszip.min.js\"></script>\n<script src=\"../site_libs/pdfmake-1.13.4/pdfmake.js\"></script>\n<script src=\"../site_libs/pdfmake-1.13.4/vfs_fonts.js\"></script>\n<link href=\"../site_libs/dt-ext-buttons-1.13.4/css/buttons.dataTables.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-ext-buttons-1.13.4/js/dataTables.buttons.min.js\"></script>\n<script src=\"../site_libs/dt-ext-buttons-1.13.4/js/buttons.html5.min.js\"></script>\n<script src=\"../site_libs/dt-ext-buttons-1.13.4/js/buttons.colVis.min.js\"></script>\n<script src=\"../site_libs/dt-ext-buttons-1.13.4/js/buttons.print.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}