{
  "hash": "4bc50d62d48d094cf5ed04f52e83c79b",
  "result": {
    "markdown": "---\ntitle: Cachitos 2022\ndate: '2023-01-002'\ncategories: \n  - estadística\n  - polémica\n  - 2023\n  - textmining\n  - ocr\n  - linux\n  - cachitos\ndescription: ''\nexecute: \n  message: false\n  warning: false\n  echo: true\nformat: \n  html: \n    fig-height: 5\n    fig-dpi: 300\n    fig-width: 8.88\n    fig-align: center\nknitr:\n  opts_chunk:\n    out.width: 80%\n    fig.showtext: TRUE\n    collapse: true\n    comment: \"#>\"\nimage: \"00001031.jpg\"\n---\n\n\n\nRetomando la entrada de [cachitos de la nochevieja de 2020](https://muestrear-no-es-pecado.netlify.app/2021/01/11/cachitos-primera-parte/)\n\n\nActualizamos el [script](https://github.com/joscani/blog_quarto/raw/master/2023/01/02/cachitos-2022-primera-parte/extract_subtitles.sh) que se baja el vídeo, recorta y extrae los subtítulos. \n\n\nSea como sea, siempre ha dejado perlas como estas\n\nEjemplo:\n\n![](ejemplo_946.jpg)\n\nEl fotograma se obtiene usando mplayer y sacando uno de 200 fotogramas como imagen, luego se recorta la parte del súbtitulo, se invierten los colores y se usa `tesseract` para el `ocr`\n\n\n![](00000946_subtitulo.png)\n\nY tesseract hace el trabajo de pasarlo a texto\n\n```bash\nIzquierda... Derecha... Como veis, tienen la postura tan\nsólidamente definida como el gobierno respecto al Sahara.\n```\n\nVeamos las partes importantes de `extract_subtitles.sh`\n\n## Bajar el vídeo\n\n```bash\n#!/bin/bash\n\nroot_directory=/home/jose/proyecto_cachitos\nmkdir -p $root_directory\ncd $root_directory\n\necho \"First arg: $1\"\nmkdir -p video\n\ncd video\n\nANNO=$1\necho $ANNO\nsuffix_video=\"_cachitos.mp4\"\nsuffix_jpg_dir=\"_jpg\"\nsuffix_txt_dir=\"_txt\"\n\nvideo_file=$ANNO$suffix_video\necho $video_file\n\n\nif [ \"$ANNO\" == \"2022\" ] ;\nthen\n    wget https://rtvehlsvodlote7.rtve.es/mediavodv2/resources/TE_SHIECRO/mp4/1/5/1672556504451.mp4\n    mv 1672556504451.mp4 $video_file\nfi\n\n\n\n```\n\nComo se contaba en el post original hay que ir a la web de rtve play, ir a reproducir el cachitos correspondiente, y luego darle a inspeccionar código y ver de qué url está haciendo el request.  Para 2021 por ejemplo estaba en \n`https://lote5-vod-hls-geoblockurl.akamaized.net/resources/TE_GLUCA/mp4/4/0/1641020001504.mp4` . Cómo vemos, no hay mucha coherencia en dónde dejan los archivos. \n\n## Convertir a jpg , cambiar tamaño y extraer subtítulos.\n\nGracias a software de linux como `mplayer` `parallel` o `magick` se puede hacer un montón de cosas con los vídeos e imágenes.\n\n\n```bash\n# Pasar a jpg uno de cada 200 fotogramas\n\nmplayer -vf framestep=200 -framedrop -nosound $video_file -speed 100 -vo jpeg:outdir=$ANNO$suffix_jpg_dir \n \ncd $ANNO$suffix_jpg_dir \n \n# Convertir a formato más pequño\nfind . -name '*.jpg' |  parallel -j 8 mogrify -resize 642x480 {}\n\n# Seleccionar cacho dond están subtitulos\nfind . -name '*.jpg' |  parallel -j 8 convert {} -crop 460x50+90+295 +repage -compress none -depth 8 {}.subtitulo.tif\n\n# Poner en negativo para que el ocr funcione mejor\nfind . -name '*.tif' |  parallel -j 8 convert {} -negate -fx '.8*r+.8*g+0*b' -compress none -depth 8 {}\n\n```\n\n* Con mplayer extraemso uno de cada 200 fotogramas y los guardamos como formato jpeg en la carpeta especificada. \n* Con la utilidad `mogrify` de `magick` reescalamos cada uno de los archivos anteriores a 642x480 píxeles.  Con `parallel` ( `sudo apt install parallel`  si no lo tienes instalado) le decimos que haga esto en paralelo usando 8 hilos de ejecución\n* Con `convert`y opción `crop`  indicamos y recortamos la zona de la imagen dónde creemos que están los rótulos y creamos archivos tif que sólo tienen esa zona.\n* Con la opción `negate` de `convert` invertimos los colores de forma que sea más fácil para `tesseract` hacer el reconomicimiento óptico de caracteres. \n\n\n## OCR. \n\nCon tesseract simplemente pasamos los archivos tif generados y le indicamos que lo haga en paralelo usando 8 hilos y que como lenguaje utilizando el español `-l spa ` \n\n```bash\n# Pasar el ocr con idioma en español\nfind . -name '*.tif' |  parallel -j 8 tesseract -l spa {} {}\n\n```\n\n`tesseract` creará tantos archivos `txt` como fotogramas hayamos extraído (1302 ficheros para cachitos nochevieja de 2022), la mayoría estarán sin rótulos. \n\nEl nombre que hemos puesto a los archivos sigue este patrón `00000946.jpg.subtitulo.tif.txt` \nindicando el número de fotograma así como las diferentes extensiones, así será más fácil luego identificar un texto con la imagen de la que viene. \n\nEn la siguiente entrada  veremos algo de limpieza de texto. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}